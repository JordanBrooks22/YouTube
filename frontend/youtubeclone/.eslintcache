[{"C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\index.js":"1","C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\reportWebVitals.js":"2","C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\App.jsx":"3","C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\components\\videoPlayer\\videoPlayer.jsx":"4","C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\components\\navBar\\navBar.jsx":"5","C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\components\\searchResultsContent\\searchResultsContent.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":4327,"mtime":1609897777855,"results":"10","hashOfConfig":"8"},{"size":1150,"mtime":1609897374835,"results":"11","hashOfConfig":"8"},{"size":1014,"mtime":1609898167780,"results":"12","hashOfConfig":"8"},{"size":1847,"mtime":1609897374828,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ig0ons",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\index.js",[],["30","31"],"C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\reportWebVitals.js",[],"C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\App.jsx",["32","33"],"import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/navBar/navBar'\r\nimport DisplaySearchResults from './components/searchResultsContent/searchResultsContent'\r\nimport axios from 'axios';\r\nimport VideoPlayer from './components/videoPlayer/videoPlayer'\r\n\r\n\r\n//API KEY: AIzaSyBsU5PWYl_AesH3un5GvQ3gMu-3IZkpsxE\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      viewingHomePage: true,\r\n      viewingSearchResults: false,\r\n      viewingVideoPlayer: false,\r\n      searchBarVal: '',\r\n      searchTerm: '',\r\n      searchCollection: [],\r\n      selectedVideo: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.selectVideo = this.selectVideo.bind(this);\r\n    this.returnHome = this.returnHome.bind(this);\r\n    \r\n  }\r\n\r\n  selectVideo(event){\r\n    event.preventDefault();\r\n\r\n    let nam = event.target.name;\r\n    let id = event.target.id;\r\n\r\n    this.setState({\r\n      [nam]: id,\r\n      viewingHomePage: false,\r\n      viewingSearchResults: false,\r\n      viewingVideoPlayer: true\r\n    })\r\n  }\r\n\r\n  returnHome(event){\r\n    event.preventDefault();\r\n    \r\n    this.setState({\r\n      viewingHomePage: true,\r\n      viewingSearchResults: false,\r\n      viewingVideoPlayer: false\r\n    })\r\n  }\r\n\r\n  handleChange(event){\r\n      \r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({[nam]: val});\r\n\r\n  }\r\n\r\n  handleSubmit = async (event)=>{\r\n\r\n    event.preventDefault();\r\n\r\n    if(this.state.searchBarVal.length<1){\r\n      return\r\n    }\r\n\r\n    console.log('handle request')\r\n\r\n\r\n    const response = await youtube.get('search', {\r\n      params: {\r\n        part: 'snippet',\r\n        maxResults: 15,\r\n        key: 'AIzaSyAf1AqBRPpPuTaZruy5z971niRJkDnoj4I',\r\n        q: this.state.searchBarVal\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      viewingHomePage: false,\r\n      viewingSearchResults: true,\r\n      viewingVideoPlayer: false,\r\n    })\r\n    \r\n    this.setState({\r\n      searchCollection: response.data.items\r\n    });\r\n\r\n    console.log(response);\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n  render(){\r\n\r\n    console.log('viewing home page?: ', this.state.viewingHomePage);\r\n    console.log('viewing Search results?: ', this.state.viewingSearchResults);\r\n    console.log('viewing video player?: ', this.state.viewingVideoPlayer);\r\n    console.log('Search Bar Value: ', this.state.searchBarVal);\r\n    console.log('Search Term: ', this.state.searchTerm);\r\n    console.log('Search Collection: ', this.state.searchCollection);\r\n    console.log('Search Collection Length: ', this.state.searchCollection.length);\r\n    console.log('Selected Video: ', this.state.selectedVideo)\r\n\r\n    if(this.state.viewingHomePage === true && this.state.viewingSearchResults === false && this.state.viewingVideoPlayer === false){\r\n      return(\r\n        <React.Fragment>\r\n          <NavBar \r\n          handleSearchbarChange={()=> this.handleChange} \r\n          handleSearch={()=>this.handleSubmit}\r\n          searchBar={this.state.searchBarVal}\r\n          returnHome={()=> this.returnHome}/>\r\n        </React.Fragment>\r\n      )\r\n    } else if(this.state.viewingHomePage === false && this.state.viewingSearchResults === true && this.state.viewingVideoPlayer === false){\r\n      return(\r\n        <React.Fragment>\r\n          <NavBar \r\n          handleSearchbarChange={()=> this.handleChange} \r\n          handleSearch={()=>this.handleSubmit}\r\n          returnHome={()=> this.returnHome}/>\r\n          <DisplaySearchResults \r\n          searchResult={this.state.searchBarVal} \r\n          collection={this.state.searchCollection}\r\n          searchingFor={this.state.searchBarVal}\r\n          selectAVideo = {()=>this.selectVideo}/>\r\n        </React.Fragment>\r\n      )\r\n    } else if(this.state.viewingHomePage === false && this.state.viewingSearchResults === false && this.state.viewingVideoPlayer === true){\r\n      return(\r\n        <React.Fragment>\r\n          <NavBar \r\n          handleSearchbarChange={()=> this.handleChange} \r\n          handleSearch={()=>this.handleSubmit}\r\n          returnHome={()=> this.returnHome}/>\r\n          <VideoPlayer selectAVideo = {()=>this.selectVideo} selectedVideo={this.state.selectedVideo}/>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\components\\videoPlayer\\videoPlayer.jsx",["34","35"],"import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction VideoPlayer(props){\r\n\r\n    const currentlyPlaying = `https://www.youtube.com/embed/${props.selectedVideo}`\r\n\r\n    return(\r\n        <div>\r\n            <Row>\r\n                <h1></h1>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={2}>\r\n                </Col>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                    <iframe width=\"560\" height=\"315\" src={currentlyPlaying} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                        {/* Player and Comment Content goes here */}\r\n                    </Row>\r\n                    <Row>\r\n                        Comments\r\n                        {/* Comment Section */}\r\n                    </Row>\r\n                    \r\n                </Col>\r\n                <Col xs={2}>\r\n                    {/* Recommended Content goes Here */}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n    }\r\n\r\n\r\n    export default VideoPlayer","C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\components\\navBar\\navBar.jsx",["36"],"C:\\Users\\Owner\\Desktop\\YouTubeClone\\frontend\\youtubeclone\\src\\components\\searchResultsContent\\searchResultsContent.jsx",["37","38"],"import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Img from 'react-bootstrap/Image'\r\n\r\n\r\nconst createSearchResults = (props)=>{\r\n\r\n    \r\n    \r\n    let results = props.collection.map((collection, index)=>{\r\n\r\n        const { snippet, id } = collection\r\n\r\n        if(id.kind === 'youtube#channel'){\r\n            return\r\n        }\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    Title: {snippet.title}\r\n                </Row>\r\n                <Row>\r\n                    <Img src={snippet.thumbnails.medium.url} width={snippet.thumbnails.medium.width} height={snippet.thumbnails.medium.height} name='selectedVideo' id={id.videoId} onClick={props.selectAVideo()}/>\r\n                </Row>\r\n                {/* <Row>\r\n                   <iframe src={`http://www.youtube.com/embed/${id.videoId}`}/>\r\n                </Row> */}\r\n                <Row>\r\n                    Channel:  {snippet.channelTitle}\r\n                </Row>\r\n                <Row>\r\n                    ----------------------------------------------------------\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    })\r\n\r\n\r\n  return(results)\r\n    \r\n    \r\n}\r\n\r\nfunction DisplaySearchResults(props){\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <Row>\r\n            <Col xs={11}>\r\n                <h1>Now Searching: {props.searchingFor}</h1>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col xs={2}>\r\n                {/* blank */}\r\n            </Col>\r\n            <Col xs={8}>\r\n\r\n                \r\n              {createSearchResults(props)}\r\n\r\n                \r\n            </Col>\r\n            <Col xs={2}>\r\n                {/* blank */}\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default DisplaySearchResults;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":13},{"ruleId":"47","severity":2,"message":"48","line":73,"column":28,"nodeType":"45","messageId":"49","endLine":73,"endColumn":35},{"ruleId":"50","severity":1,"message":"51","line":13,"column":17,"nodeType":"52","endLine":13,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":20,"column":21,"nodeType":"52","endLine":20,"endColumn":206},{"ruleId":"43","severity":1,"message":"55","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":12},{"ruleId":"43","severity":1,"message":"56","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":17,"column":13,"nodeType":"59","messageId":"60","endLine":17,"endColumn":19},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-undef","'youtube' is not defined.","undef","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Text' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation"]